// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π JavaScript —Ñ–∞–π–ª –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
class FileManagerDemo {
    constructor() {
        this.name = 'React Terminal File Manager';
        this.version = '1.0.0';
        this.features = [
            'File Navigation',
            'Preview System', 
            'Search & Filtering',
            'Drag & Drop Upload',
            'Performance Monitoring',
            'Accessibility Features',
            'Advanced Animations',
            'Export Utilities'
        ];
        
        this.init();
    }
    
    init() {
        console.log(`üöÄ Initializing ${this.name} v${this.version}`);
        this.showFeatures();
        this.demonstrateAnimations();
    }
    
    showFeatures() {
        console.log('üìã Available Features:');
        this.features.forEach((feature, index) => {
            console.log(`  ${index + 1}. ‚úÖ ${feature}`);
        });
    }
    
    demonstrateAnimations() {
        const animationTypes = [
            'fade', 'slide', 'scale', 'rotate', 
            'bounce', 'elastic', 'matrix', 'particle'
        ];
        
        console.log('üé® Animation Types:', animationTypes);
        
        // –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        animationTypes.forEach((type, index) => {
            setTimeout(() => {
                console.log(`‚ú® Demonstrating ${type} animation...`);
            }, index * 500);
        });
    }
    
    getPerformanceMetrics() {
        return {
            bundleSize: '110kB (gzipped)',
            loadTime: '<2 seconds',
            lightHouseScore: '95+',
            accessibility: 'WCAG 2.1 AA',
            browser_support: ['Chrome 90+', 'Firefox 88+', 'Safari 14+', 'Edge 90+']
        };
    }
    
    exportData(format = 'json') {
        const data = {
            app: this.name,
            version: this.version,
            features: this.features,
            metrics: this.getPerformanceMetrics()
        };
        
        switch (format) {
            case 'json':
                return JSON.stringify(data, null, 2);
            case 'csv':
                return this.convertToCSV(data);
            default:
                return data;
        }
    }
    
    convertToCSV(data) {
        const rows = [
            ['Property', 'Value'],
            ['App Name', data.app],
            ['Version', data.version],
            ['Features Count', data.features.length],
            ['Bundle Size', data.metrics.bundleSize],
            ['Load Time', data.metrics.loadTime]
        ];
        
        return rows.map(row => row.join(',')).join('\n');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const demo = new FileManagerDemo();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = FileManagerDemo;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π
function testFileManager() {
    console.log('üß™ Testing File Manager Functions...');
    
    // –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞
    console.log('üì§ JSON Export:');
    console.log(demo.exportData('json'));
    
    console.log('\nüì§ CSV Export:');
    console.log(demo.exportData('csv'));
    
    // –¢–µ—Å—Ç –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('\nüìä Performance Metrics:');
    console.log(demo.getPerformanceMetrics());
    
    console.log('\n‚úÖ All tests completed!');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
setTimeout(testFileManager, 2000);
