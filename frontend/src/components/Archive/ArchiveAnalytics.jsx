import React, { useState, useEffect } from 'react';
import { archiveAPI } from '../../services/archiveAPI';

const ArchiveAnalytics = () => {
  const [analyticsData, setAnalyticsData] = useState({
    storageMetrics: {},
    categoryDistribution: [],
    accessPatterns: {},
    retentionCompliance: {},
    aiAccuracy: {}
  });
  const [selectedPeriod, setSelectedPeriod] = useState('30d');
  const [isLoading, setIsLoading] = useState(true);
  const [activeTab, setActiveTab] = useState('storage');

  useEffect(() => {
    loadAnalyticsData();
  }, [selectedPeriod]);

  const loadAnalyticsData = async () => {
    try {
      setIsLoading(true);
      
      const [storage, categories, access, retention, accuracy] = await Promise.all([
        archiveAPI.getStorageMetrics(selectedPeriod),
        archiveAPI.getCategoryDistribution(),
        archiveAPI.getAccessPatterns(selectedPeriod),
        archiveAPI.getRetentionCompliance(),
        archiveAPI.getAIAccuracyMetrics()
      ]);

      setAnalyticsData({
        storageMetrics: storage,
        categoryDistribution: categories,
        accessPatterns: access,
        retentionCompliance: retention,
        aiAccuracy: accuracy
      });
    } catch (error) {
      console.error('Failed to load analytics:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const formatFileSize = (bytes) => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  const formatPercentage = (value, total) => {
    if (!total) return '0%';
    return `${Math.round((value / total) * 100)}%`;
  };

  const exportReport = async () => {
    try {
      const blob = await archiveAPI.exportAnalyticsReport({
        period: selectedPeriod,
        format: 'pdf'
      });
      
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `archive-analytics-${selectedPeriod}.pdf`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);
    } catch (error) {
      console.error('Export failed:', error);
    }
  };

  if (isLoading) {
    return (
      <div className="archive-loading">
        <div className="archive-spinner"></div>
        –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...
      </div>
    );
  }

  return (
    <div className="archive-analytics">
      <div className="analytics-header">
        <h2 className="dashboard-title">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å</h2>
        
        <div className="analytics-controls">
          <select 
            className="archive-input"
            value={selectedPeriod}
            onChange={(e) => setSelectedPeriod(e.target.value)}
          >
            <option value="7d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</option>
            <option value="30d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</option>
            <option value="90d">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞</option>
            <option value="1y">–ü–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥</option>
          </select>
          
          <button className="archive-btn primary" onClick={exportReport}>
            üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞
          </button>
        </div>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ */}
      <div className="analytics-tabs">
        <button 
          className={`archive-nav-item ${activeTab === 'storage' ? 'active' : ''}`}
          onClick={() => setActiveTab('storage')}
        >
          üíæ –•—Ä–∞–Ω–∏–ª–∏—â–µ
        </button>
        <button 
          className={`archive-nav-item ${activeTab === 'categories' ? 'active' : ''}`}
          onClick={() => setActiveTab('categories')}
        >
          üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
        </button>
        <button 
          className={`archive-nav-item ${activeTab === 'access' ? 'active' : ''}`}
          onClick={() => setActiveTab('access')}
        >
          üëÅÔ∏è –î–æ—Å—Ç—É–ø
        </button>
        <button 
          className={`archive-nav-item ${activeTab === 'compliance' ? 'active' : ''}`}
          onClick={() => setActiveTab('compliance')}
        >
          ‚úÖ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        </button>
        <button 
          className={`archive-nav-item ${activeTab === 'ai' ? 'active' : ''}`}
          onClick={() => setActiveTab('ai')}
        >
          ü§ñ –ò–ò –ú–µ—Ç—Ä–∏–∫–∏
        </button>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
      <div className="analytics-content">
        
        {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ */}
        {activeTab === 'storage' && (
          <div className="storage-analytics">
            <div className="archive-stats-grid">
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {formatFileSize(analyticsData.storageMetrics.totalSize || 0)}
                </div>
                <div className="archive-stat-label">–û–±—â–∏–π –æ–±—ä–µ–º</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.storageMetrics.totalDocuments || 0}
                </div>
                <div className="archive-stat-label">–í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {formatFileSize(analyticsData.storageMetrics.averageFileSize || 0)}
                </div>
                <div className="archive-stat-label">–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.storageMetrics.growthRate || 0}%
                </div>
                <div className="archive-stat-label">–†–æ—Å—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥</div>
              </div>
            </div>

            {/* –ì—Ä–∞—Ñ–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ */}
            <div className="archive-card">
              <div className="archive-card-header">
                <h3 className="archive-card-title">–î–∏–Ω–∞–º–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞</h3>
              </div>
              <div className="storage-chart">
                {analyticsData.storageMetrics.dailyUsage?.map((day, index) => (
                  <div key={index} className="chart-bar">
                    <div 
                      className="bar-fill"
                      style={{ 
                        height: `${(day.size / analyticsData.storageMetrics.maxDaySize) * 100}%` 
                      }}
                    ></div>
                    <div className="bar-label">{day.date}</div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
        {activeTab === 'categories' && (
          <div className="categories-analytics">
            <div className="archive-card">
              <div className="archive-card-header">
                <h3 className="archive-card-title">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</h3>
              </div>
              <div className="category-distribution">
                {analyticsData.categoryDistribution.map((category, index) => (
                  <div key={index} className="category-item">
                    <div className="category-info">
                      <span className="category-name">{category.name}</span>
                      <span className="category-stats">
                        {category.documentCount} –¥–æ–∫. ‚Ä¢ {formatFileSize(category.totalSize)}
                      </span>
                    </div>
                    <div className="category-bar">
                      <div 
                        className="category-fill"
                        style={{ 
                          width: formatPercentage(
                            category.documentCount, 
                            analyticsData.categoryDistribution.reduce((sum, cat) => sum + cat.documentCount, 0)
                          )
                        }}
                      ></div>
                    </div>
                    <span className="category-percentage">
                      {formatPercentage(
                        category.documentCount,
                        analyticsData.categoryDistribution.reduce((sum, cat) => sum + cat.documentCount, 0)
                      )}
                    </span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–∞ */}
        {activeTab === 'access' && (
          <div className="access-analytics">
            <div className="archive-stats-grid">
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.accessPatterns.totalViews || 0}
                </div>
                <div className="archive-stat-label">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.accessPatterns.totalDownloads || 0}
                </div>
                <div className="archive-stat-label">–°–∫–∞—á–∏–≤–∞–Ω–∏–π</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.accessPatterns.uniqueUsers || 0}
                </div>
                <div className="archive-stat-label">–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.accessPatterns.avgAccessTime || 0}—Å
                </div>
                <div className="archive-stat-label">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç—É–ø–∞</div>
              </div>
            </div>

            {/* –¢–æ–ø –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ */}
            <div className="archive-card">
              <div className="archive-card-header">
                <h3 className="archive-card-title">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h3>
              </div>
              <div className="popular-documents">
                {analyticsData.accessPatterns.topDocuments?.map((doc, index) => (
                  <div key={index} className="popular-doc-item">
                    <span className="doc-rank">#{index + 1}</span>
                    <div className="doc-info">
                      <span className="doc-name">{doc.name}</span>
                      <span className="doc-stats">{doc.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
                    </div>
                    <div className="access-progress">
                      <div 
                        className="archive-progress-bar"
                        style={{ 
                          width: formatPercentage(doc.views, analyticsData.accessPatterns.topDocuments[0].views)
                        }}
                      ></div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º */}
        {activeTab === 'compliance' && (
          <div className="compliance-analytics">
            <div className="archive-stats-grid">
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.retentionCompliance.compliantDocuments || 0}
                </div>
                <div className="archive-stat-label">–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.retentionCompliance.expiringDocuments || 0}
                </div>
                <div className="archive-stat-label">–ò—Å—Ç–µ–∫–∞—é—Ç</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.retentionCompliance.overdueDocuments || 0}
                </div>
                <div className="archive-stat-label">–ü—Ä–æ—Å—Ä–æ—á–µ–Ω—ã</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {Math.round(analyticsData.retentionCompliance.complianceRate || 0)}%
                </div>
                <div className="archive-stat-label">–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ</div>
              </div>
            </div>

            {/* –ü—Ä–æ–±–ª–µ–º—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è */}
            <div className="archive-card">
              <div className="archive-card-header">
                <h3 className="archive-card-title">–ü—Ä–æ–±–ª–µ–º—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è</h3>
              </div>
              <div className="compliance-issues">
                {analyticsData.retentionCompliance.issues?.map((issue, index) => (
                  <div key={index} className={`issue-item ${issue.severity}`}>
                    <div className="issue-icon">
                      {issue.severity === 'high' && 'üî¥'}
                      {issue.severity === 'medium' && 'üü°'}
                      {issue.severity === 'low' && 'üü¢'}
                    </div>
                    <div className="issue-content">
                      <span className="issue-title">{issue.title}</span>
                      <span className="issue-description">{issue.description}</span>
                    </div>
                    <button className="archive-btn">–ò—Å–ø—Ä–∞–≤–∏—Ç—å</button>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* –ò–ò –ú–µ—Ç—Ä–∏–∫–∏ */}
        {activeTab === 'ai' && (
          <div className="ai-analytics">
            <div className="archive-stats-grid">
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {Math.round(analyticsData.aiAccuracy.classificationAccuracy || 0)}%
                </div>
                <div className="archive-stat-label">–¢–æ—á–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.aiAccuracy.totalAnalyses || 0}
                </div>
                <div className="archive-stat-label">–í—Å–µ–≥–æ –∞–Ω–∞–ª–∏–∑–æ–≤</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {Math.round(analyticsData.aiAccuracy.averageConfidence || 0)}%
                </div>
                <div className="archive-stat-label">–°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å</div>
              </div>
              
              <div className="archive-stat-card">
                <div className="archive-stat-value">
                  {analyticsData.aiAccuracy.averageProcessingTime || 0}—Å
                </div>
                <div className="archive-stat-label">–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏</div>
              </div>
            </div>

            {/* –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ò–ò –º–æ–¥–µ–ª–µ–π */}
            <div className="archive-card">
              <div className="archive-card-header">
                <h3 className="archive-card-title">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ò–ò –º–æ–¥–µ–ª–µ–π</h3>
              </div>
              <div className="ai-models-performance">
                {analyticsData.aiAccuracy.modelPerformance?.map((model, index) => (
                  <div key={index} className="model-item">
                    <div className="model-info">
                      <span className="model-name">{model.name}</span>
                      <span className="model-type">{model.type}</span>
                    </div>
                    <div className="model-metrics">
                      <div className="metric">
                        <span className="metric-label">–¢–æ—á–Ω–æ—Å—Ç—å:</span>
                        <span className="metric-value">{model.accuracy}%</span>
                      </div>
                      <div className="metric">
                        <span className="metric-label">–°–∫–æ—Ä–æ—Å—Ç—å:</span>
                        <span className="metric-value">{model.speed}—Å</span>
                      </div>
                    </div>
                    <div className="model-progress">
                      <div className="archive-progress">
                        <div 
                          className="archive-progress-bar"
                          style={{ width: `${model.accuracy}%` }}
                        ></div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default ArchiveAnalytics;
