{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-django/frontend/src/components/CodeChan/CodeChan.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { defaultCodeChanState, codeChanAnimations, getRandomEncouragement, getRandomTip } from './CodeChanTypes';\nimport './CodeChan.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CodeChan = ({\n  mood = 'happy',\n  message,\n  onInteract,\n  enableAutoActions = true\n}) => {\n  _s();\n  const [state, setState] = useState({\n    ...defaultCodeChanState,\n    mood\n  });\n  const [isWaving, setIsWaving] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [autoMessage, setAutoMessage] = useState('');\n  const handleInteraction = useCallback(() => {\n    const newState = {\n      ...state,\n      isWaving: true\n    };\n    setState(newState);\n    onInteract === null || onInteract === void 0 ? void 0 : onInteract(newState);\n\n    // Случайное сообщение при взаимодействии\n    setAutoMessage(Math.random() > 0.5 ? getRandomEncouragement() : getRandomTip());\n    setIsSpeaking(true);\n    setTimeout(() => {\n      setIsWaving(false);\n      setState(prev => ({\n        ...prev,\n        isWaving: false\n      }));\n    }, 2000);\n  }, [state, onInteract]);\n  useEffect(() => {\n    if (enableAutoActions) {\n      const interval = setInterval(() => {\n        const shouldAct = Math.random() > 0.7;\n        if (shouldAct) {\n          const actions = ['wave', 'speak', 'animate'];\n          const randomAction = actions[Math.floor(Math.random() * actions.length)];\n          switch (randomAction) {\n            case 'wave':\n              setIsWaving(true);\n              setTimeout(() => setIsWaving(false), 2000);\n              break;\n            case 'speak':\n              setAutoMessage(getRandomTip());\n              setIsSpeaking(true);\n              break;\n            case 'animate':\n              setState(prev => ({\n                ...prev,\n                mood: ['happy', 'thinking', 'coding'][Math.floor(Math.random() * 3)]\n              }));\n              break;\n          }\n        }\n      }, 10000);\n      return () => clearInterval(interval);\n    }\n  }, [enableAutoActions]);\n  useEffect(() => {\n    // Случайные действия\n    const randomAction = () => {\n      const shouldWave = Math.random() > 0.7;\n      if (shouldWave) {\n        setIsWaving(true);\n        setTimeout(() => setIsWaving(false), 2000);\n      }\n    };\n    const actionInterval = setInterval(randomAction, 5000);\n    return () => clearInterval(actionInterval);\n  }, []);\n  useEffect(() => {\n    if (message) {\n      setIsSpeaking(true);\n      const timer = setTimeout(() => setIsSpeaking(false), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"code-chan-container\",\n    initial: codeChanAnimations[mood].initial,\n    animate: codeChanAnimations[mood].animate,\n    transition: codeChanAnimations[mood].transition,\n    children: [/*#__PURE__*/_jsxDEV(motion.img, {\n      src: \"/code_chan.svg\",\n      alt: \"Code Chan - \\u043C\\u0438\\u043B\\u044B\\u0439 \\u043A\\u043E\\u0442\\u0438\\u043A \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0441\\u0442\",\n      className: \"code-chan-image\",\n      animate: isWaving ? {\n        rotate: [0, 15, -15, 0]\n      } : {},\n      transition: {\n        duration: 0.5\n      },\n      onClick: handleInteraction,\n      style: {\n        cursor: 'pointer',\n        width: '128px',\n        height: '128px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isSpeaking && message && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"speech-bubble bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg\",\n        initial: {\n          opacity: 0,\n          scale: 0.8,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          scale: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          scale: 0.8,\n          y: 20\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-800 dark:text-gray-200\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeChan, \"/3QJWqfoBzT+6nje705IIb+bmCM=\");\n_c = CodeChan;\nvar _c;\n$RefreshReg$(_c, \"CodeChan\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","defaultCodeChanState","codeChanAnimations","getRandomEncouragement","getRandomTip","jsxDEV","_jsxDEV","CodeChan","mood","message","onInteract","enableAutoActions","_s","state","setState","isWaving","setIsWaving","isSpeaking","setIsSpeaking","autoMessage","setAutoMessage","handleInteraction","newState","Math","random","setTimeout","prev","interval","setInterval","shouldAct","actions","randomAction","floor","length","clearInterval","shouldWave","actionInterval","timer","clearTimeout","div","className","initial","animate","transition","children","img","src","alt","rotate","duration","onClick","style","cursor","width","height","fileName","_jsxFileName","lineNumber","columnNumber","opacity","scale","y","exit","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-django/frontend/src/components/CodeChan/CodeChan.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n    CodeChanMood, \n    CodeChanState, \n    defaultCodeChanState,\n    codeChanAnimations,\n    getRandomEncouragement,\n    getRandomTip\n} from './CodeChanTypes';\nimport { CodeChanEmotion } from './CodeChanEmotion';\nimport { CodeChanSpeechBubble } from './CodeChanSpeechBubble';\nimport './CodeChan.css';\n\ninterface CodeChanProps {\n    mood?: CodeChanMood;\n    message?: string;\n    onInteract?: (state: CodeChanState) => void;\n    enableAutoActions?: boolean;\n}\n\nexport const CodeChan: React.FC<CodeChanProps> = ({ \n    mood = 'happy', \n    message,\n    onInteract,\n    enableAutoActions = true \n}) => {\n    const [state, setState] = useState<CodeChanState>({\n        ...defaultCodeChanState,\n        mood\n    });\n    const [isWaving, setIsWaving] = useState(false);\n    const [isSpeaking, setIsSpeaking] = useState(false);\n    const [autoMessage, setAutoMessage] = useState<string>('');\n\n    const handleInteraction = useCallback(() => {\n        const newState = {\n            ...state,\n            isWaving: true\n        };\n        setState(newState);\n        onInteract?.(newState);\n        \n        // Случайное сообщение при взаимодействии\n        setAutoMessage(Math.random() > 0.5 ? getRandomEncouragement() : getRandomTip());\n        setIsSpeaking(true);\n        \n        setTimeout(() => {\n            setIsWaving(false);\n            setState(prev => ({ ...prev, isWaving: false }));\n        }, 2000);\n    }, [state, onInteract]);\n\n    useEffect(() => {\n        if (enableAutoActions) {\n            const interval = setInterval(() => {\n                const shouldAct = Math.random() > 0.7;\n                if (shouldAct) {\n                    const actions = ['wave', 'speak', 'animate'];\n                    const randomAction = actions[Math.floor(Math.random() * actions.length)];\n                    \n                    switch(randomAction) {\n                        case 'wave':\n                            setIsWaving(true);\n                            setTimeout(() => setIsWaving(false), 2000);\n                            break;\n                        case 'speak':\n                            setAutoMessage(getRandomTip());\n                            setIsSpeaking(true);\n                            break;\n                        case 'animate':\n                            setState(prev => ({\n                                ...prev,\n                                mood: ['happy', 'thinking', 'coding'][Math.floor(Math.random() * 3)] as CodeChanMood\n                            }));\n                            break;\n                    }\n                }\n            }, 10000);\n            \n            return () => clearInterval(interval);\n        }\n    }, [enableAutoActions]);\n\n    useEffect(() => {\n        // Случайные действия\n        const randomAction = () => {\n            const shouldWave = Math.random() > 0.7;\n            if (shouldWave) {\n                setIsWaving(true);\n                setTimeout(() => setIsWaving(false), 2000);\n            }\n        };\n\n        const actionInterval = setInterval(randomAction, 5000);\n        return () => clearInterval(actionInterval);\n    }, []);\n\n    useEffect(() => {\n        if (message) {\n            setIsSpeaking(true);\n            const timer = setTimeout(() => setIsSpeaking(false), 5000);\n            return () => clearTimeout(timer);\n        }\n    }, [message]);\n\n    return (\n        <motion.div\n            className=\"code-chan-container\"\n            initial={codeChanAnimations[mood].initial}\n            animate={codeChanAnimations[mood].animate}\n            transition={codeChanAnimations[mood].transition}\n        >\n            {/* Code Chan изображение */}\n            <motion.img\n                src=\"/code_chan.svg\"\n                alt=\"Code Chan - милый котик программист\"\n                className=\"code-chan-image\"\n                animate={isWaving ? { rotate: [0, 15, -15, 0] } : {}}\n                transition={{ duration: 0.5 }}\n                onClick={handleInteraction}\n                style={{ cursor: 'pointer', width: '128px', height: '128px' }}\n            />\n\n            {/* Сообщение */}\n            <AnimatePresence>\n                {isSpeaking && message && (\n                    <motion.div\n                        className=\"speech-bubble bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg\"\n                        initial={{ opacity: 0, scale: 0.8, y: 20 }}\n                        animate={{ opacity: 1, scale: 1, y: 0 }}\n                        exit={{ opacity: 0, scale: 0.8, y: 20 }}\n                        transition={{ duration: 0.3 }}\n                    >\n                        <p className=\"text-sm text-gray-800 dark:text-gray-200\">{message}</p>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </motion.div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}