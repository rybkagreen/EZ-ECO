{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useCallback } from 'react';\nexport const useHotKeys = (hotKeys, options = {}) => {\n  _s();\n  const {\n    enabled = true,\n    preventDefault = true\n  } = options;\n  const handleKeyDown = useCallback(event => {\n    if (!enabled) return;\n    const matchingHotKey = hotKeys.find(hotKey => {\n      const keyMatch = hotKey.key.toLowerCase() === event.key.toLowerCase();\n      const ctrlMatch = !!hotKey.ctrl === event.ctrlKey;\n      const altMatch = !!hotKey.alt === event.altKey;\n      const shiftMatch = !!hotKey.shift === event.shiftKey;\n      const metaMatch = !!hotKey.meta === event.metaKey;\n      return keyMatch && ctrlMatch && altMatch && shiftMatch && metaMatch;\n    });\n    if (matchingHotKey) {\n      if (preventDefault) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      matchingHotKey.action();\n    }\n  }, [hotKeys, enabled, preventDefault]);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  const formatHotKeyText = useCallback(hotKey => {\n    const parts = [];\n    if (hotKey.ctrl) parts.push('Ctrl');\n    if (hotKey.alt) parts.push('Alt');\n    if (hotKey.shift) parts.push('Shift');\n    if (hotKey.meta) parts.push('Cmd');\n    parts.push(hotKey.key.toUpperCase());\n    return parts.join(' + ');\n  }, []);\n  return {\n    formatHotKeyText\n  };\n};\n_s(useHotKeys, \"L4QubftfNxRCmek15MHhm3DqEc8=\");","map":{"version":3,"names":["useEffect","useCallback","useHotKeys","hotKeys","options","_s","enabled","preventDefault","handleKeyDown","event","matchingHotKey","find","hotKey","keyMatch","key","toLowerCase","ctrlMatch","ctrl","ctrlKey","altMatch","alt","altKey","shiftMatch","shift","shiftKey","metaMatch","meta","metaKey","stopPropagation","action","document","addEventListener","removeEventListener","formatHotKeyText","parts","push","toUpperCase","join"],"sources":["/workspaces/codespaces-django/frontend/src/hooks/useHotKeys.ts"],"sourcesContent":["import { useEffect, useCallback } from 'react';\n\nexport interface HotKey {\n    key: string;\n    ctrl?: boolean;\n    alt?: boolean;\n    shift?: boolean;\n    meta?: boolean;\n    action: () => void;\n    description?: string;\n}\n\ninterface UseHotKeysOptions {\n    enabled?: boolean;\n    preventDefault?: boolean;\n}\n\nexport const useHotKeys = (\n    hotKeys: HotKey[], \n    options: UseHotKeysOptions = {}\n) => {\n    const { enabled = true, preventDefault = true } = options;\n\n    const handleKeyDown = useCallback((event: KeyboardEvent) => {\n        if (!enabled) return;\n\n        const matchingHotKey = hotKeys.find(hotKey => {\n            const keyMatch = hotKey.key.toLowerCase() === event.key.toLowerCase();\n            const ctrlMatch = !!hotKey.ctrl === event.ctrlKey;\n            const altMatch = !!hotKey.alt === event.altKey;\n            const shiftMatch = !!hotKey.shift === event.shiftKey;\n            const metaMatch = !!hotKey.meta === event.metaKey;\n\n            return keyMatch && ctrlMatch && altMatch && shiftMatch && metaMatch;\n        });\n\n        if (matchingHotKey) {\n            if (preventDefault) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            matchingHotKey.action();\n        }\n    }, [hotKeys, enabled, preventDefault]);\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleKeyDown]);\n\n    const formatHotKeyText = useCallback((hotKey: HotKey) => {\n        const parts: string[] = [];\n        \n        if (hotKey.ctrl) parts.push('Ctrl');\n        if (hotKey.alt) parts.push('Alt');\n        if (hotKey.shift) parts.push('Shift');\n        if (hotKey.meta) parts.push('Cmd');\n        \n        parts.push(hotKey.key.toUpperCase());\n        \n        return parts.join(' + ');\n    }, []);\n\n    return { formatHotKeyText };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAiB9C,OAAO,MAAMC,UAAU,GAAGA,CACtBC,OAAiB,EACjBC,OAA0B,GAAG,CAAC,CAAC,KAC9B;EAAAC,EAAA;EACD,MAAM;IAAEC,OAAO,GAAG,IAAI;IAAEC,cAAc,GAAG;EAAK,CAAC,GAAGH,OAAO;EAEzD,MAAMI,aAAa,GAAGP,WAAW,CAAEQ,KAAoB,IAAK;IACxD,IAAI,CAACH,OAAO,EAAE;IAEd,MAAMI,cAAc,GAAGP,OAAO,CAACQ,IAAI,CAACC,MAAM,IAAI;MAC1C,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAG,CAACC,WAAW,CAAC,CAAC,KAAKN,KAAK,CAACK,GAAG,CAACC,WAAW,CAAC,CAAC;MACrE,MAAMC,SAAS,GAAG,CAAC,CAACJ,MAAM,CAACK,IAAI,KAAKR,KAAK,CAACS,OAAO;MACjD,MAAMC,QAAQ,GAAG,CAAC,CAACP,MAAM,CAACQ,GAAG,KAAKX,KAAK,CAACY,MAAM;MAC9C,MAAMC,UAAU,GAAG,CAAC,CAACV,MAAM,CAACW,KAAK,KAAKd,KAAK,CAACe,QAAQ;MACpD,MAAMC,SAAS,GAAG,CAAC,CAACb,MAAM,CAACc,IAAI,KAAKjB,KAAK,CAACkB,OAAO;MAEjD,OAAOd,QAAQ,IAAIG,SAAS,IAAIG,QAAQ,IAAIG,UAAU,IAAIG,SAAS;IACvE,CAAC,CAAC;IAEF,IAAIf,cAAc,EAAE;MAChB,IAAIH,cAAc,EAAE;QAChBE,KAAK,CAACF,cAAc,CAAC,CAAC;QACtBE,KAAK,CAACmB,eAAe,CAAC,CAAC;MAC3B;MACAlB,cAAc,CAACmB,MAAM,CAAC,CAAC;IAC3B;EACJ,CAAC,EAAE,CAAC1B,OAAO,EAAEG,OAAO,EAAEC,cAAc,CAAC,CAAC;EAEtCP,SAAS,CAAC,MAAM;IACZ8B,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEvB,aAAa,CAAC;IACnD,OAAO,MAAM;MACTsB,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAExB,aAAa,CAAC;IAC1D,CAAC;EACL,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMyB,gBAAgB,GAAGhC,WAAW,CAAEW,MAAc,IAAK;IACrD,MAAMsB,KAAe,GAAG,EAAE;IAE1B,IAAItB,MAAM,CAACK,IAAI,EAAEiB,KAAK,CAACC,IAAI,CAAC,MAAM,CAAC;IACnC,IAAIvB,MAAM,CAACQ,GAAG,EAAEc,KAAK,CAACC,IAAI,CAAC,KAAK,CAAC;IACjC,IAAIvB,MAAM,CAACW,KAAK,EAAEW,KAAK,CAACC,IAAI,CAAC,OAAO,CAAC;IACrC,IAAIvB,MAAM,CAACc,IAAI,EAAEQ,KAAK,CAACC,IAAI,CAAC,KAAK,CAAC;IAElCD,KAAK,CAACC,IAAI,CAACvB,MAAM,CAACE,GAAG,CAACsB,WAAW,CAAC,CAAC,CAAC;IAEpC,OAAOF,KAAK,CAACG,IAAI,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ;EAAiB,CAAC;AAC/B,CAAC;AAAC5B,EAAA,CAjDWH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}