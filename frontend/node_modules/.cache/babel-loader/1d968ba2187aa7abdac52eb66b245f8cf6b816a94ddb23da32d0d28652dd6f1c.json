{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-django/frontend/src/components/PerformanceMonitor/PerformanceMonitor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Activity, Clock, Cpu, Zap, BarChart3, TrendingUp } from 'lucide-react';\nimport './PerformanceMonitor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PerformanceMonitor = ({\n  renderCount: externalRenderCount,\n  renderTime: externalRenderTime,\n  memoryUsage: externalMemoryUsage,\n  fileOperations: externalFileOperations,\n  averageLoadTime: externalAverageLoadTime,\n  onOptimizationSuggestion,\n  enabled = true,\n  compact = false\n}) => {\n  _s();\n  const [metrics, setMetrics] = useState({\n    renderCount: 0,\n    renderTime: 0,\n    memoryUsage: 0,\n    fileOperations: 0,\n    averageLoadTime: 0,\n    lastUpdate: Date.now()\n  });\n  const [isVisible, setIsVisible] = useState(false);\n  const [performanceScore, setPerformanceScore] = useState(100);\n\n  // Используем внешние метрики если они переданы, иначе внутренние\n  const currentMetrics = {\n    renderCount: externalRenderCount !== null && externalRenderCount !== void 0 ? externalRenderCount : metrics.renderCount,\n    renderTime: externalRenderTime !== null && externalRenderTime !== void 0 ? externalRenderTime : metrics.renderTime,\n    memoryUsage: externalMemoryUsage !== null && externalMemoryUsage !== void 0 ? externalMemoryUsage : metrics.memoryUsage,\n    fileOperations: externalFileOperations !== null && externalFileOperations !== void 0 ? externalFileOperations : metrics.fileOperations,\n    averageLoadTime: externalAverageLoadTime !== null && externalAverageLoadTime !== void 0 ? externalAverageLoadTime : metrics.averageLoadTime,\n    lastUpdate: metrics.lastUpdate\n  };\n\n  // Мониторинг производительности\n  const measurePerformance = useCallback(() => {\n    var _memory;\n    if (!enabled) return;\n    const startTime = performance.now();\n\n    // Симуляция измерения метрик\n    const newMetrics = {\n      renderCount: metrics.renderCount + 1,\n      renderTime: performance.now() - startTime,\n      memoryUsage: ((_memory = performance.memory) === null || _memory === void 0 ? void 0 : _memory.usedJSHeapSize) || 0,\n      fileOperations: metrics.fileOperations,\n      averageLoadTime: (metrics.averageLoadTime + (performance.now() - startTime)) / 2,\n      lastUpdate: Date.now()\n    };\n    setMetrics(newMetrics);\n\n    // Расчет общего скора производительности\n    const score = Math.max(0, 100 - newMetrics.renderTime * 2 - newMetrics.averageLoadTime / 10);\n    setPerformanceScore(Math.round(score));\n\n    // Автоматические предложения по оптимизации\n    if (newMetrics.renderTime > 50 && onOptimizationSuggestion) {\n      onOptimizationSuggestion('Обнаружена медленная отрисовка. Рекомендуется оптимизация компонентов.');\n    }\n    if (newMetrics.memoryUsage > 50000000 && onOptimizationSuggestion) {\n      onOptimizationSuggestion('Высокое использование памяти. Рекомендуется очистка кешей.');\n    }\n  }, [enabled, metrics, onOptimizationSuggestion]);\n\n  // Обновление файловых операций\n  const incrementFileOperations = useCallback(() => {\n    setMetrics(prev => ({\n      ...prev,\n      fileOperations: prev.fileOperations + 1\n    }));\n  }, []);\n  useEffect(() => {\n    if (!enabled) return;\n    const interval = setInterval(measurePerformance, 1000);\n    return () => clearInterval(interval);\n  }, [measurePerformance, enabled]);\n\n  // Глобальный доступ к счетчику операций\n  useEffect(() => {\n    window.incrementFileOperations = incrementFileOperations;\n    return () => {\n      delete window.incrementFileOperations;\n    };\n  }, [incrementFileOperations]);\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  };\n  const getPerformanceStatus = () => {\n    if (performanceScore >= 80) return {\n      status: 'excellent',\n      color: '#22c55e',\n      icon: Zap\n    };\n    if (performanceScore >= 60) return {\n      status: 'good',\n      color: '#3b82f6',\n      icon: TrendingUp\n    };\n    if (performanceScore >= 40) return {\n      status: 'fair',\n      color: '#f59e0b',\n      icon: BarChart3\n    };\n    return {\n      status: 'poor',\n      color: '#ef4444',\n      icon: Activity\n    };\n  };\n  if (!enabled) return null;\n  const perfStatus = getPerformanceStatus();\n  const StatusIcon = perfStatus.icon;\n  if (compact) {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"performance-monitor-compact\",\n      initial: {\n        opacity: 0,\n        scale: 0.8\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      exit: {\n        opacity: 0,\n        scale: 0.8\n      },\n      whileHover: {\n        scale: 1.05\n      },\n      onClick: () => setIsVisible(!isVisible),\n      children: [/*#__PURE__*/_jsxDEV(StatusIcon, {\n        size: 16,\n        style: {\n          color: perfStatus.color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: perfStatus.color\n        },\n        children: performanceScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: isVisible && /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"performance-tooltip\",\n          initial: {\n            opacity: 0,\n            y: 10\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"perf-metric\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [currentMetrics.renderTime.toFixed(1), \"ms\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"perf-metric\",\n            children: [/*#__PURE__*/_jsxDEV(Cpu, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatBytes(currentMetrics.memoryUsage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"perf-metric\",\n            children: [/*#__PURE__*/_jsxDEV(Activity, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [currentMetrics.fileOperations, \" ops\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"performance-monitor\",\n    initial: {\n      opacity: 0,\n      x: -20\n    },\n    animate: {\n      opacity: 1,\n      x: 0\n    },\n    transition: {\n      duration: 0.3\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"performance-header\",\n      children: [/*#__PURE__*/_jsxDEV(StatusIcon, {\n        size: 18,\n        style: {\n          color: perfStatus.color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"performance-title\",\n        children: \"Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"performance-score\",\n        style: {\n          backgroundColor: perfStatus.color\n        },\n        children: performanceScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"performance-metrics\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-icon\",\n          children: /*#__PURE__*/_jsxDEV(Clock, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Render Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: [currentMetrics.renderTime.toFixed(1), \"ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-icon\",\n          children: /*#__PURE__*/_jsxDEV(Cpu, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: formatBytes(currentMetrics.memoryUsage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-icon\",\n          children: /*#__PURE__*/_jsxDEV(Activity, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Operations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: currentMetrics.fileOperations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-icon\",\n          children: /*#__PURE__*/_jsxDEV(BarChart3, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Avg Load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: [currentMetrics.averageLoadTime.toFixed(1), \"ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"performance-bar\",\n      initial: {\n        width: 0\n      },\n      animate: {\n        width: `${performanceScore}%`\n      },\n      transition: {\n        duration: 0.5,\n        ease: \"easeOut\"\n      },\n      style: {\n        backgroundColor: perfStatus.color\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(PerformanceMonitor, \"XMeP4WCIK9OIPY7F35VA2xhMoCo=\");\n_c = PerformanceMonitor;\nexport default PerformanceMonitor;\nvar _c;\n$RefreshReg$(_c, \"PerformanceMonitor\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","Activity","Clock","Cpu","Zap","BarChart3","TrendingUp","jsxDEV","_jsxDEV","PerformanceMonitor","renderCount","externalRenderCount","renderTime","externalRenderTime","memoryUsage","externalMemoryUsage","fileOperations","externalFileOperations","averageLoadTime","externalAverageLoadTime","onOptimizationSuggestion","enabled","compact","_s","metrics","setMetrics","lastUpdate","Date","now","isVisible","setIsVisible","performanceScore","setPerformanceScore","currentMetrics","measurePerformance","_memory","startTime","performance","newMetrics","memory","usedJSHeapSize","score","Math","max","round","incrementFileOperations","prev","interval","setInterval","clearInterval","window","formatBytes","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","getPerformanceStatus","status","color","icon","perfStatus","StatusIcon","div","className","initial","opacity","scale","animate","exit","whileHover","onClick","children","size","style","fileName","_jsxFileName","lineNumber","columnNumber","y","x","transition","duration","backgroundColor","width","ease","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-django/frontend/src/components/PerformanceMonitor/PerformanceMonitor.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Activity, Clock, Cpu, Zap, BarChart3, TrendingUp } from 'lucide-react';\nimport './PerformanceMonitor.css';\n\ninterface PerformanceMetrics {\n    renderCount: number;\n    renderTime: number;\n    memoryUsage: number;\n    fileOperations: number;\n    averageLoadTime: number;\n    lastUpdate: number;\n}\n\ninterface PerformanceMonitorProps {\n    renderCount?: number;\n    renderTime?: number;\n    memoryUsage?: number;\n    fileOperations?: number;\n    averageLoadTime?: number;\n    onOptimizationSuggestion?: (suggestion: string) => void;\n    enabled?: boolean;\n    compact?: boolean;\n}\n\nexport const PerformanceMonitor: React.FC<PerformanceMonitorProps> = ({\n    renderCount: externalRenderCount,\n    renderTime: externalRenderTime,\n    memoryUsage: externalMemoryUsage,\n    fileOperations: externalFileOperations,\n    averageLoadTime: externalAverageLoadTime,\n    onOptimizationSuggestion,\n    enabled = true,\n    compact = false\n}) => {\n    const [metrics, setMetrics] = useState<PerformanceMetrics>({\n        renderCount: 0,\n        renderTime: 0,\n        memoryUsage: 0,\n        fileOperations: 0,\n        averageLoadTime: 0,\n        lastUpdate: Date.now()\n    });\n    const [isVisible, setIsVisible] = useState(false);\n    const [performanceScore, setPerformanceScore] = useState(100);\n\n    // Используем внешние метрики если они переданы, иначе внутренние\n    const currentMetrics = {\n        renderCount: externalRenderCount ?? metrics.renderCount,\n        renderTime: externalRenderTime ?? metrics.renderTime,\n        memoryUsage: externalMemoryUsage ?? metrics.memoryUsage,\n        fileOperations: externalFileOperations ?? metrics.fileOperations,\n        averageLoadTime: externalAverageLoadTime ?? metrics.averageLoadTime,\n        lastUpdate: metrics.lastUpdate\n    };\n\n    // Мониторинг производительности\n    const measurePerformance = useCallback(() => {\n        if (!enabled) return;\n\n        const startTime = performance.now();\n        \n        // Симуляция измерения метрик\n        const newMetrics: PerformanceMetrics = {\n            renderCount: metrics.renderCount + 1,\n            renderTime: performance.now() - startTime,\n            memoryUsage: (performance as any).memory?.usedJSHeapSize || 0,\n            fileOperations: metrics.fileOperations,\n            averageLoadTime: (metrics.averageLoadTime + (performance.now() - startTime)) / 2,\n            lastUpdate: Date.now()\n        };\n\n        setMetrics(newMetrics);\n        \n        // Расчет общего скора производительности\n        const score = Math.max(0, 100 - (newMetrics.renderTime * 2) - (newMetrics.averageLoadTime / 10));\n        setPerformanceScore(Math.round(score));\n\n        // Автоматические предложения по оптимизации\n        if (newMetrics.renderTime > 50 && onOptimizationSuggestion) {\n            onOptimizationSuggestion('Обнаружена медленная отрисовка. Рекомендуется оптимизация компонентов.');\n        }\n        if (newMetrics.memoryUsage > 50000000 && onOptimizationSuggestion) {\n            onOptimizationSuggestion('Высокое использование памяти. Рекомендуется очистка кешей.');\n        }\n    }, [enabled, metrics, onOptimizationSuggestion]);\n\n    // Обновление файловых операций\n    const incrementFileOperations = useCallback(() => {\n        setMetrics(prev => ({\n            ...prev,\n            fileOperations: prev.fileOperations + 1\n        }));\n    }, []);\n\n    useEffect(() => {\n        if (!enabled) return;\n\n        const interval = setInterval(measurePerformance, 1000);\n        return () => clearInterval(interval);\n    }, [measurePerformance, enabled]);\n\n    // Глобальный доступ к счетчику операций\n    useEffect(() => {\n        (window as any).incrementFileOperations = incrementFileOperations;\n        return () => {\n            delete (window as any).incrementFileOperations;\n        };\n    }, [incrementFileOperations]);\n\n    const formatBytes = (bytes: number) => {\n        if (bytes === 0) return '0 B';\n        const k = 1024;\n        const sizes = ['B', 'KB', 'MB', 'GB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n    };\n\n    const getPerformanceStatus = () => {\n        if (performanceScore >= 80) return { status: 'excellent', color: '#22c55e', icon: Zap };\n        if (performanceScore >= 60) return { status: 'good', color: '#3b82f6', icon: TrendingUp };\n        if (performanceScore >= 40) return { status: 'fair', color: '#f59e0b', icon: BarChart3 };\n        return { status: 'poor', color: '#ef4444', icon: Activity };\n    };\n\n    if (!enabled) return null;\n\n    const perfStatus = getPerformanceStatus();\n    const StatusIcon = perfStatus.icon;\n\n    if (compact) {\n        return (\n            <motion.div \n                className=\"performance-monitor-compact\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                whileHover={{ scale: 1.05 }}\n                onClick={() => setIsVisible(!isVisible)}\n            >\n                <StatusIcon size={16} style={{ color: perfStatus.color }} />\n                <span style={{ color: perfStatus.color }}>{performanceScore}</span>\n                \n                <AnimatePresence>\n                    {isVisible && (\n                        <motion.div \n                            className=\"performance-tooltip\"\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            exit={{ opacity: 0, y: 10 }}\n                        >\n                            <div className=\"perf-metric\">\n                                <Clock size={12} />\n                                <span>{currentMetrics.renderTime.toFixed(1)}ms</span>\n                            </div>\n                            <div className=\"perf-metric\">\n                                <Cpu size={12} />\n                                <span>{formatBytes(currentMetrics.memoryUsage)}</span>\n                            </div>\n                            <div className=\"perf-metric\">\n                                <Activity size={12} />\n                                <span>{currentMetrics.fileOperations} ops</span>\n                            </div>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </motion.div>\n        );\n    }\n\n    return (\n        <motion.div \n            className=\"performance-monitor\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n        >\n            <div className=\"performance-header\">\n                <StatusIcon size={18} style={{ color: perfStatus.color }} />\n                <span className=\"performance-title\">Performance</span>\n                <div \n                    className=\"performance-score\"\n                    style={{ backgroundColor: perfStatus.color }}\n                >\n                    {performanceScore}\n                </div>\n            </div>\n\n            <div className=\"performance-metrics\">\n                <div className=\"metric-item\">\n                    <div className=\"metric-icon\">\n                        <Clock size={14} />\n                    </div>\n                    <div className=\"metric-details\">\n                        <span className=\"metric-label\">Render Time</span>\n                        <span className=\"metric-value\">{currentMetrics.renderTime.toFixed(1)}ms</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-item\">\n                    <div className=\"metric-icon\">\n                        <Cpu size={14} />\n                    </div>\n                    <div className=\"metric-details\">\n                        <span className=\"metric-label\">Memory</span>\n                        <span className=\"metric-value\">{formatBytes(currentMetrics.memoryUsage)}</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-item\">\n                    <div className=\"metric-icon\">\n                        <Activity size={14} />\n                    </div>\n                    <div className=\"metric-details\">\n                        <span className=\"metric-label\">Operations</span>\n                        <span className=\"metric-value\">{currentMetrics.fileOperations}</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-item\">\n                    <div className=\"metric-icon\">\n                        <BarChart3 size={14} />\n                    </div>\n                    <div className=\"metric-details\">\n                        <span className=\"metric-label\">Avg Load</span>\n                        <span className=\"metric-value\">{currentMetrics.averageLoadTime.toFixed(1)}ms</span>\n                    </div>\n                </div>\n            </div>\n\n            <motion.div \n                className=\"performance-bar\"\n                initial={{ width: 0 }}\n                animate={{ width: `${performanceScore}%` }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n                style={{ backgroundColor: perfStatus.color }}\n            />\n        </motion.div>\n    );\n};\n\nexport default PerformanceMonitor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}