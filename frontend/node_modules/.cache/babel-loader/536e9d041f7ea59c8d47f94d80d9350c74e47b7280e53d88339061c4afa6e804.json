{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-django/frontend/src/components/ThemeToggle/ThemeToggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Moon, Sun } from 'lucide-react';\nimport './ThemeToggle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeToggle = ({\n  className = ''\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Проверяем сохраненную тему или системные настройки\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const shouldUseDark = savedTheme === 'dark' || !savedTheme && prefersDark;\n    setIsDarkMode(shouldUseDark);\n    applyTheme(shouldUseDark);\n  }, []);\n  const applyTheme = darkMode => {\n    const root = document.documentElement;\n    if (darkMode) {\n      root.setAttribute('data-theme', 'dark');\n    } else {\n      root.setAttribute('data-theme', 'light');\n    }\n  };\n  const toggleTheme = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    applyTheme(newDarkMode);\n    localStorage.setItem('theme', newDarkMode ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `theme-toggle ${className}`,\n    onClick: toggleTheme,\n    title: isDarkMode ? 'Переключить на светлую тему' : 'Переключить на темную тему',\n    \"aria-label\": isDarkMode ? 'Переключить на светлую тему' : 'Переключить на темную тему',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-toggle-icon\",\n      children: isDarkMode ? /*#__PURE__*/_jsxDEV(Sun, {\n        size: 16,\n        className: \"icon-sun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n        size: 16,\n        className: \"icon-moon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"theme-toggle-text\",\n      children: isDarkMode ? 'Светлая' : 'Темная'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeToggle, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useState","useEffect","Moon","Sun","jsxDEV","_jsxDEV","ThemeToggle","className","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","shouldUseDark","applyTheme","darkMode","root","document","documentElement","setAttribute","toggleTheme","newDarkMode","setItem","onClick","title","children","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-django/frontend/src/components/ThemeToggle/ThemeToggle.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Moon, Sun } from 'lucide-react';\nimport './ThemeToggle.css';\n\ninterface ThemeToggleProps {\n    className?: string;\n}\n\nexport const ThemeToggle: React.FC<ThemeToggleProps> = ({ className = '' }) => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    useEffect(() => {\n        // Проверяем сохраненную тему или системные настройки\n        const savedTheme = localStorage.getItem('theme');\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        \n        const shouldUseDark = savedTheme === 'dark' || (!savedTheme && prefersDark);\n        setIsDarkMode(shouldUseDark);\n        applyTheme(shouldUseDark);\n    }, []);\n\n    const applyTheme = (darkMode: boolean) => {\n        const root = document.documentElement;\n        \n        if (darkMode) {\n            root.setAttribute('data-theme', 'dark');\n        } else {\n            root.setAttribute('data-theme', 'light');\n        }\n    };\n\n    const toggleTheme = () => {\n        const newDarkMode = !isDarkMode;\n        setIsDarkMode(newDarkMode);\n        applyTheme(newDarkMode);\n        localStorage.setItem('theme', newDarkMode ? 'dark' : 'light');\n    };\n\n    return (\n        <button \n            className={`theme-toggle ${className}`}\n            onClick={toggleTheme}\n            title={isDarkMode ? 'Переключить на светлую тему' : 'Переключить на темную тему'}\n            aria-label={isDarkMode ? 'Переключить на светлую тему' : 'Переключить на темную тему'}\n        >\n            <div className=\"theme-toggle-icon\">\n                {isDarkMode ? (\n                    <Sun size={16} className=\"icon-sun\" />\n                ) : (\n                    <Moon size={16} className=\"icon-moon\" />\n                )}\n            </div>\n            <span className=\"theme-toggle-text\">\n                {isDarkMode ? 'Светлая' : 'Темная'}\n            </span>\n        </button>\n    );\n};\n\nexport default ThemeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,QAAQ,cAAc;AACxC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3B,OAAO,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE7E,MAAMC,aAAa,GAAGP,UAAU,KAAK,MAAM,IAAK,CAACA,UAAU,IAAIG,WAAY;IAC3EJ,aAAa,CAACQ,aAAa,CAAC;IAC5BC,UAAU,CAACD,aAAa,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAIC,QAAiB,IAAK;IACtC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAe;IAErC,IAAIH,QAAQ,EAAE;MACVC,IAAI,CAACG,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC;IAC3C,CAAC,MAAM;MACHH,IAAI,CAACG,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,WAAW,GAAG,CAACjB,UAAU;IAC/BC,aAAa,CAACgB,WAAW,CAAC;IAC1BP,UAAU,CAACO,WAAW,CAAC;IACvBd,YAAY,CAACe,OAAO,CAAC,OAAO,EAAED,WAAW,GAAG,MAAM,GAAG,OAAO,CAAC;EACjE,CAAC;EAED,oBACIrB,OAAA;IACIE,SAAS,EAAE,gBAAgBA,SAAS,EAAG;IACvCqB,OAAO,EAAEH,WAAY;IACrBI,KAAK,EAAEpB,UAAU,GAAG,6BAA6B,GAAG,4BAA6B;IACjF,cAAYA,UAAU,GAAG,6BAA6B,GAAG,4BAA6B;IAAAqB,QAAA,gBAEtFzB,OAAA;MAAKE,SAAS,EAAC,mBAAmB;MAAAuB,QAAA,EAC7BrB,UAAU,gBACPJ,OAAA,CAACF,GAAG;QAAC4B,IAAI,EAAE,EAAG;QAACxB,SAAS,EAAC;MAAU;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEtC9B,OAAA,CAACH,IAAI;QAAC6B,IAAI,EAAE,EAAG;QAACxB,SAAS,EAAC;MAAW;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC1C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACN9B,OAAA;MAAME,SAAS,EAAC,mBAAmB;MAAAuB,QAAA,EAC9BrB,UAAU,GAAG,SAAS,GAAG;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB,CAAC;AAAC3B,EAAA,CAjDWF,WAAuC;AAAA8B,EAAA,GAAvC9B,WAAuC;AAmDpD,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}