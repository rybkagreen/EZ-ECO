#!/usr/bin/env python3
"""
–¢–µ—Å—Ç real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π WebSocket –ø—Ä–∏ —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö
"""
import asyncio
import websockets
import json
import os
import time

async def test_realtime_updates():
    uri = "ws://localhost:8001/ws/filemanager/"
    test_file = "/workspaces/codespaces-django/test_dragdrop/websocket_test.txt"
    
    try:
        print(f"üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ {uri}...")
        
        async with websockets.connect(uri) as websocket:
            print("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω!")
            
            # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            subscribe_msg = {
                "action": "subscribe",
                "data": {"path": "/workspaces/codespaces-django/test_dragdrop"}
            }
            await websocket.send(json.dumps(subscribe_msg))
            print("üì° –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏ test_dragdrop")
            
            # –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ–Ω–µ
            async def listen_messages():
                while True:
                    try:
                        message = await asyncio.wait_for(websocket.recv(), timeout=1.0)
                        data = json.loads(message)
                        if data.get('type') == 'file_change':
                            print(f"üîÑ Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {data}")
                        else:
                            print(f"üì• –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('type', 'unknown')}")
                    except asyncio.TimeoutError:
                        continue
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                        break
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –≤ —Ñ–æ–Ω–µ
            listen_task = asyncio.create_task(listen_messages())
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            print("üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")
            with open(test_file, 'w', encoding='utf-8') as f:
                f.write(f"–¢–µ—Å—Ç WebSocket –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π - {time.time()}")
            
            await asyncio.sleep(2)
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ñ–∞–π–ª
            print("‚úèÔ∏è –ò–∑–º–µ–Ω—è–µ–º —Ñ–∞–π–ª...")
            with open(test_file, 'a', encoding='utf-8') as f:
                f.write(f"\\n–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ - {time.time()}")
            
            await asyncio.sleep(2)
            
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
            print("üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª...")
            if os.path.exists(test_file):
                os.remove(test_file)
            
            await asyncio.sleep(2)
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ
            listen_task.cancel()
            print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    asyncio.run(test_realtime_updates())
